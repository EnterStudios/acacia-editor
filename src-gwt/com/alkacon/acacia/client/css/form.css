@external mceEditor, mceExternalToolbar, mceStatusbar, mceIframeContainer, mceLayout;

@def PARENT_GRADIENT literal("left, #FFFFFF 0%, #F4F7F9 80%, #E1E4E8 100%");  
@def FOCUS_GRADIENT literal("left, #E1E4E8 0%, #EAEDEF 80%, #F4F7F9 100%");  
 
.attribute{}
.formParent{
	background-color: transparent !important;
}

.entity{
	margin: 5px;
}

.entity .entity{
	margin: 0px 0px 0px 20px;
}

/** Attribute value view styles. */
.attributeValue .label{
	margin:4px 3px 2px;
	color: #7788aa;
	cursor: default;
}
.entity .attributeValue{
	padding-bottom:2px;
}
.entity .attributeValue .label span, .dragHelper.attributeValue .label span{
	font-size: 14px;
	font-weight: bold;
}

.attributeValue.emptyValue .label{
	color: #B1B4B8;
	font-style: italic;
}

.entity .entity .attributeValue .label span{
	font-weight: normal;
}

.entity .entity .entity .attributeValue .label span{
	font-size: 12px;
}
.entity .attributeValue > div{
	position: relative;
	padding: 2px 0px 2px 4px;
}

.attributeValue .label span, .attributeValue .label div{
	font-weight:bold;
}

.attributeValue .buttonBar{
	position: absolute;
	top: 2px;
	right: 2px;
}

@if user.agent ie6 {
	.button{
		display: inline;
		cursor: pointer;
	}
} @else {
	.button{
		display: inline-block;
		cursor: pointer;
	}
}

/** Editing widget styles. */
.widgetHolder .widget{
	margin: 0 2px 4px 2px;
}

.widgetHolder .widget.input{
	margin: 0px 2px;
	padding: 2px 5px;
	min-height: 14px;
}

.input:focus{
	outline:none;
}

.widgetHolder > .widget.input, .attributeValue .widgetHolder  .mceEditor{
	border: 1px solid #7788AA;
	background: #ffffff;
}
.widgetHolder > .widget.input{
	cursor: text;
}
.attributeValue .widgetHolder  .mceEditor.inActive *{
	visibility: hidden;
}

.widgetHolder > .widget.input.inActive, .attributeValue .widgetHolder  .mceEditor.inActive{
	color: transparent;
	border-color: #B1B4B8;
}

.attributeValue.focused > div > .widgetHolder > .mceEditor .mceStatusbar{
	visibility: visible;
}

.attributeValue > div > .widgetHolder > .mceEditor .mceStatusbar{
	visibility: hidden;
	border: none;
}

.attributeValue.focused > div > .widgetHolder > .mceEditor .mceExternalToolbar{
	z-index: 10;
}

.attributeValue.focused > div > .widgetHolder > .mceEditor .mceIframeContainer{
	border-bottom: 1px solid #aaaaaa;
}

.attributeValue > div > .widgetHolder > .mceEditor .mceIframeContainer{
	border-color: #ffffff;
}

.attributeValue > div > .widgetHolder > .mceEditor > table.mceLayout{
	border: none;
}

.attributeValue .mceEditor .mceExternalToolbar{
	z-index: -1;
}

/** Help bubble styles. */
.helpBubble{
	position: absolute;
	background: #FFFFCC;
	color: #222222;
	top: 100%;
	left: 2px;
	display: none;
	padding: 7px 19px 3px 5px;
	border-radius:4px;
	z-index: 10;
	box-shadow: 2px 2px 6px #666666;
	opacity: 0.9;
}

.displayAbove  > div > .helpBubble{
	top: auto;
	bottom: 100%;
}
@sprite .displayAbove > div > .helpBubble > .helpBubbleArrow{
	gwt-image: "bottomLeftCorner";
	height: 10px;
	width: 10px;
	position: absolute;
	top: auto;
	bottom: -5px;
	left: 10px;
}
.helpBubble div{
	color: #222222;
}

.attributeValue.focused > div > .helpBubble{
	display: block;
}

.attributeValue.focused.closedBubble > div > .helpBubble{
	display: none;
}

.helpBubble .helpBubbleClose{
	position: absolute;
	top: 2px;
	right: 2px;
}

@sprite .helpBubbleArrow{
	gwt-image: "topLeftCorner";
	height: 10px;
	width: 10px;
	position: absolute;
	top: -5px;
	left: 10px;
}

/** Browser specific styles. */
@if user.agent gecko1_8 gecko{
	/** firefox **/
	.entity .attributeValue > div, .dragHelper.attributeValue > div{
		-moz-border-radius: 4px;
	}
	.widgetHolder .widget.input, .attributeValue .widgetHolder  .mceEditor{
		-moz-border-radius: 2px;
	}
	.formParent{
		background-image: literal("-moz-linear-gradient(")PARENT_GRADIENT literal(")") !important;
	}
	.entity .attributeValue.focused > div, .dragHelper.attributeValue > div{
		background-image: literal("-moz-linear-gradient(")FOCUS_GRADIENT literal(")");
	}
} @elif user.agent safari {
	/** chrome, safari etc. **/
	.entity .attributeValue > div, .dragHelper.attributeValue > div{
		-webkit-border-radius: 4px;
	}
	.widgetHolder .widget.input, .attributeValue .widgetHolder  .mceEditor{
		-webkit-border-radius: 2px;
	}
	.formParent{
		background-image: literal("-webkit-linear-gradient(")PARENT_GRADIENT literal(")") !important;
	}
	.entity .attributeValue.focused > div, .dragHelper.attributeValue > div{
		background-image: literal("-webkit-linear-gradient(")FOCUS_GRADIENT literal(")");
	}
} @elif user.agent opera {
	/** opera */
	.entity .attributeValue > div, .dragHelper.attributeValue > div{
		border-radius: 4px;
	}
	.widgetHolder .widget.input, .attributeValue .widgetHolder  .mceEditor{
		border-radius: 2px;
	}
	.formParent{
		background-image: literal("-o-linear-gradient(")PARENT_GRADIENT literal(")") !important;
	}
	.entity .attributeValue.focused > div, .dragHelper.attributeValue > div{
		background-image: literal("-o-linear-gradient(")FOCUS_GRADIENT literal(")");
	}
} @else {
	/** ie */
	.entity .attributeValue > div, .dragHelper.attributeValue > div{
		border-radius: 4px;
	}
	.widgetHolder .widget.input, .attributeValue .widgetHolder  .mceEditor{
		border-radius: 2px;
	}
	div.formParent{
		background: #EEEEEE !important;
	}
	.entity .attributeValue.focused > div, .dragHelper.attributeValue > div{
		background: #A3B1CC;
	}
}

/** Drag and drop styles. */
div.entity div.attributeValue.dragPlaceholder > div{
	background-image: none;
	background-color: #ffffff !important;
	opacity: 0.8;
}

@sprite div.entity div.attributeValue.dragPlaceholder > div {
	gwt-image: "baseImages.placeholderImage";
}

.dragPlaceholder > div *{
	visibility:hidden;
}

.dragElement {
	display: none;
}

@if user.agent ie6 {
	.dragPlaceholder {
		filter: literal("alpha(opacity = 50)");
	}
} @elif user.agent ie8 {
	.dragPlaceholder {
		-ms-filter: "alpha(opacity = 50)";
	}
} @else {
	.dragPlaceholder {
        opacity: 0.5;
	}
}

.dragStarted .attributeValue .buttonBar > div{
	display: none;
}

.dragStarted .dragHelper.attributeValue .buttonBar > .moveHandle{
	display: inline-block;
}

.dragHelper.attributeValue{
	position: absolute;
	opacity: 0.8;
}

.dragHelper.attributeValue > div{
	position: relative;
	padding: 2px 0px 2px 4px;
}
.dragOverlay{
	position: fixed;
	z-index: value("constants.css.zIndexPopup");
	top: 0px;
	left: 0px;
	height: 100%;
	width: 100%;
	background: transparent;
}


