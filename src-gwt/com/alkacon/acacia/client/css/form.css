@external mceEditor,defaultSkin, mceExternalToolbar, mceStatusbar, mceIframeContainer, mceLayout, mceToolbar, gwt-TabLayoutPanelTabBar, gwt-TabLayoutPanel, gwt-TabLayoutPanelTab;

@def PARENT_GRADIENT literal("left, #FFFFFF 0%, #F4F7F9 80%, #E1E4E8 100%");  
@def FOCUS_GRADIENT literal("left, #E1E4E8 0%, #EAEDEF 80%, #F4F7F9 100%");  
 
.attribute{}
.formParent{
	background-color: transparent !important;
}

div.formParent div.gwt-TabLayoutPanel, div.formParent div.gwt-TabLayoutPanel div.gwt-TabLayoutPanelTabBar{
	background: transparent;
}

.entity{
	margin: 5px;
}

.entity .entity{
	margin: 0px 0px 0px 20px;
}

/** Attribute value view styles. */
.attributeValue .label{
	margin:4px 25px 2px 3px;
	color: #7788aa;
	cursor: default;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	
	
}
.entity .attributeValue{
	padding-bottom:2px;
	position: relative;
}
.entity .attributeValue .label, .dragHelper.attributeValue .label{
	font-size: 14px;
	font-weight: bold;
}

.attributeValue.emptyValue .label{
	color: #B1B4B8;
	font-style: italic;
}

.entity .entity .attributeValue .label{
	font-weight: normal;
}

.entity .entity .entity .attributeValue .label{
	font-size: 12px;
}
.entity .attributeValue > div.widgetHolder{
	position: relative;
	padding: 2px 0px 2px 4px;
	border-radius: value("constants.css.borderRadius");
}

.attributeValue .label{
	font-weight:bold;
}

.attributeValue .buttonBar{
	position: absolute;
	top: 2px;
	right: 2px;
}

@if user.agent ie6 {
	.button{
		display: inline;
		cursor: pointer;
	}
} @else {
	.button{
		display: inline-block;
		cursor: pointer;
	}
}

/** Editing widget styles. */
.widgetHolder .widget{
	margin: 0 2px 4px 2px;
}

.widgetHolder .widget.input{
	margin: 0px 2px;
	padding: 2px 5px;
	min-height: 14px;
}

.input:focus{
	outline:none;
}

.widgetHolder > div > .widget.input{
	border: 1px solid #7788AA;
	background: #ffffff;
}
.attributeValue .widgetHolder  .mceEditor{
	border: 1px solid #7788AA;
	background: #ffffff;
	border-radius: value("constants.css.borderRadius");
	}

.attributeValue.hasError .label{
	color: value("constants.css.borderColorHighlight");
}

.attributeValue.hasWarning .label{
	color: #FFAA00;
}

.hasError .widgetHolder > div > .widget.input, .attributeValue.hasError .widgetHolder  .mceEditor, .gwt-TabLayoutPanel .gwt-TabLayoutPanelTabBar .gwt-TabLayoutPanelTab.hasError{
	border-color: value("constants.css.borderColorHighlight");
}

.hasWarning .widgetHolder > div > .widget.input, .attributeValue.hasWarning .widgetHolder  .mceEditor, .gwt-TabLayoutPanel .gwt-TabLayoutPanelTabBar .gwt-TabLayoutPanelTab.hasWarning{
	border-color: #FFAA00;
}
.widgetHolder > div > .widget.input{
	cursor: text;
}
.attributeValue .widgetHolder  .mceEditor.inActive *{
	visibility: hidden;
}

.attributeValue.focused .widgetHolder .mceEditor {
	border-radius: 0 5px 5px 5px;
}

.widgetHolder > div > .widget.input.inActive, .attributeValue .widgetHolder  .mceEditor.inActive{
	color: transparent;
	border-color: #B1B4B8;
}

.attributeValue.focused > .widgetHolder > div > .mceEditor .mceStatusbar{
	visibility: visible;
}

.attributeValue > .widgetHolder > div > .mceEditor .mceStatusbar{
	visibility: hidden;
	border: none;
	border-radius: 0 0 3px 3px;
	
}

.attributeValue > .widgetHolder > div > .mceEditor iframe{
	border-radius: 3px 3px 0 0;
}

.attributeValue.focused > .widgetHolder > div > .mceEditor .mceExternalToolbar{
	z-index: 10;
	left: -1px;
	border-color: #7788AA;
	border-radius: 3px 3px 0 0;
}

.attributeValue.focused > .widgetHolder > div > .mceEditor .mceIframeContainer{
	border-bottom: 1px solid #aaaaaa;
	border-radius: 0 3px 0 0;
}

.attributeValue > .widgetHolder > div > .mceEditor .mceIframeContainer{
	border-color: #ffffff;
	border-radius: value("constants.css.borderRadius");
}

.attributeValue > .widgetHolder > div > .mceEditor > table.mceLayout{
	border: none;
}

.attributeValue .mceEditor .mceExternalToolbar{
	z-index: -1;
}

.attributeValue .mceEditor .mceExternalToolbar td{
	border-radius: 3px 3px 0 0;
}


/* These rules are used for laying out TinyMCE's button toolbar rows next to each other, not as rows. */

.mceIframeContainer, #mce_fullscreen_tbl , #mce_fullscreen_container {
	height: 100% !important; 
}

/* Use the cmsTinyMCE class here because we need to turn the float off/on dynamically to fix a layout problem in Chrome. */
.attributeValue .mceToolbar table, #mce_fullscreen_tbl table.mceToolbar {
   float: left;
}
                    
.mceToolbar select {
    width: auto !important;
}

.mceEditor .defaultSkin td.mceToolbar {
	background: #E1E4E8;
}
                    
.mceToolbar option {
  float: none; 
}

/** Help bubble styles. */
.helpBubble{
	position: absolute;
	background: #FFFFCC;
	color: #222222;
	top: 100%;
	left: 2px;
	display: none;
	padding: 7px 19px 3px 5px;
	border-radius:4px;
	z-index: 10;
	box-shadow: 2px 2px 6px #666666;
}

.hasError .helpMessage, .hasWarning .helpMessage{
	display: block;
	margin-top: 3px;
}
.hasError .helpBubble{
	background-color: #ffcccc;
}

@sprite .hasError .helpMessage .helpMessageIcon{
	gwt-image: "errorImageSmall";
	height: 20px;
	width: 20px;
	margin: 0px 3px 3px 0px;
	display: inline-block;
	vertical-align: middle;
}
.helpMessage{
	display:none;
}

.displayAbove > .helpBubble{
	top: auto;
	bottom: 100%;
}
@sprite .displayAbove > .helpBubble > .helpBubbleArrow{
	gwt-image: "bottomLeftCorner";
	height: 10px;
	width: 10px;
	position: absolute;
	top: auto;
	bottom: -5px;
	left: 10px;
}

@sprite .hasError.displayAbove > .helpBubble > .helpBubbleArrow{
	gwt-image: "bottomLeftCornerError";
	height: 10px;
	width: 10px;
}

.helpBubble div{
	color: #222222;
}

.attributeValue.focused > .helpBubble{
	display: block;
}

.attributeValue.focused.closedBubble > .helpBubble{
	display: none;
}

.helpBubble .helpBubbleClose{
	position: absolute;
	top: 2px;
	right: 2px;
}

@sprite .helpBubbleArrow{
	gwt-image: "topLeftCorner";
	height: 10px;
	width: 10px;
	position: absolute;
	top: -5px;
	left: 10px;
}

@sprite .hasError .helpBubbleArrow{
	gwt-image: "topLeftCornerError";
	height: 10px;
	width: 10px;
}

/** Browser specific styles. */
@if user.agent gecko1_8 gecko{
	/** firefox **/
	.entity .attributeValue > div, .dragHelper.attributeValue > div{
		-moz-border-radius: 4px;
	}
	.widgetHolder .widget.input, .attributeValue .widgetHolder  .mceEditor{
		-moz-border-radius: 3px;
	}
	.formParent, .attributeValue > .widgetHolder > div > .mceEditor .mceStatusbar,.attributeValue.focused > .widgetHolder > div > .mceEditor .mceExternalToolbar{
		background-image: literal("-moz-linear-gradient(")PARENT_GRADIENT literal(")") !important;
	}
	.entity .attributeValue.focused > .widgetHolder, .dragHelper.attributeValue > .widgetHolder{
		background-image: literal("-moz-linear-gradient(")FOCUS_GRADIENT literal(")");
	}
} @elif user.agent safari {
	/** chrome, safari etc. **/
	.entity .attributeValue > .widgetHolder, .dragHelper.attributeValue > .widgetHolder{
		-webkit-border-radius: 4px;
	}
	.widgetHolder .widget.input, .attributeValue .widgetHolder  .mceEditor{
		-webkit-border-radius: 3px;
	}
	.formParent, .attributeValue > .widgetHolder > div > .mceEditor .mceStatusbar,.attributeValue.focused > .widgetHolder > div > .mceEditor .mceExternalToolbar{
		background-image: literal("-webkit-linear-gradient(")PARENT_GRADIENT literal(")") !important;
	}
	.entity .attributeValue.focused > .widgetHolder, .dragHelper.attributeValue > .widgetHolder{
		background-image: literal("-webkit-linear-gradient(")FOCUS_GRADIENT literal(")");
	}
} @elif user.agent opera {
	/** opera */
	.entity .attributeValue > .widgetHolder, .dragHelper.attributeValue > .widgetHolder{
		border-radius: 4px;
	}
	.widgetHolder .widget.input, .attributeValue .widgetHolder  .mceEditor{
		border-radius: 3px;
	}
	.formParent, .attributeValue > .widgetHolder > div > .mceEditor .mceStatusbar,.attributeValue.focused > .widgetHolder > div > .mceEditor .mceExternalToolbar{
		background-image: literal("-o-linear-gradient(")PARENT_GRADIENT literal(")") !important;
	}
	.entity .attributeValue.focused > .widgetHolder, .dragHelper.attributeValue > .widgetHolder{
		background-image: literal("-o-linear-gradient(")FOCUS_GRADIENT literal(")");
	}
} @else {
	/** ie */
	.entity .attributeValue > .widgetHolder, .dragHelper.attributeValue > .widgetHolder{
		border-radius: 4px;
	}
	.widgetHolder .widget.input, .attributeValue .widgetHolder  .mceEditor{
		border-radius: 3px;
	}
	div.formParent, .attributeValue > .widgetHolder > div > .mceEditor .mceStatusbar, .attributeValue.focused > .widgetHolder > div > .mceEditor .mceExternalToolbar{
		background: #EEEEEE !important;
	}
	.entity .attributeValue.focused > .widgetHolder, .dragHelper.attributeValue > .widgetHolder{
		background: #A3B1CC;
	}
}

/** Drag and drop styles. */
@sprite div.entity div.attributeValue.dragPlaceholder > div {
	gwt-image: "baseImages.placeholderImage";
	background-color: #ffffff;
	opacity: 0.8;
}

.dragPlaceholder > div *{
	visibility:hidden;
}

.dragElement {
	display: none;
}

@if user.agent ie6 {
	.dragPlaceholder {
		filter: literal("alpha(opacity = 50)");
	}
} @elif user.agent ie8 {
	.dragPlaceholder {
		-ms-filter: "alpha(opacity = 50)";
	}
} @else {
	.dragPlaceholder {
        opacity: 0.5;
	}
}

.dragStarted .attributeValue .buttonBar > div{
	display: none;
}

.dragStarted .dragHelper.attributeValue .buttonBar > .moveHandle{
	display: inline-block;
}

/* Spreading the button bar to cover the hole attribute view element to avoid any iframe issues. */
.dragStarted .dragHelper.attributeValue .buttonBar {
	left: 0px;
	bottom: 0px;
	text-align: right;
}

.dragHelper.attributeValue{
	position: absolute;
	opacity: 0.8;
}

.dragHelper.attributeValue > .widgetHolder{
	padding: 2px 0px 2px 4px;
}

.dragOverlay{
	position: fixed;
	z-index: value("constants.css.zIndexPopup");
	top: 0px;
	left: 0px;
	height: 100%;
	width: 100%;
	background: transparent;
}


